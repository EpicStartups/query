// Code generated by "stringer -type clauseKind -linecomment"; DO NOT EDIT.

package query

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[_FromClause-0]
	_ = x[_LimitClause-1]
	_ = x[_OffsetClause-2]
	_ = x[_OrderClause-3]
	_ = x[_UnionClause-4]
	_ = x[_ValuesClause-5]
	_ = x[_WhereClause-6]
	_ = x[_ReturningClause-7]
	_ = x[_SetClause-8]
}

const _clauseKind_name = "FROMLIMITOFFSETORDER BYUNIONVALUESWHERERETURNINGSET"

var _clauseKind_index = [...]uint8{0, 4, 9, 15, 23, 28, 34, 39, 48, 51}

func (i clauseKind) String() string {
	if i >= clauseKind(len(_clauseKind_index)-1) {
		return "clauseKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _clauseKind_name[_clauseKind_index[i]:_clauseKind_index[i+1]]
}
